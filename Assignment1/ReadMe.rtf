{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl380\partightenfactor0

\f0\b\fs32 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Part 1
\f1\b0\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 Designed an information network analysis strategy for measuring the various network properties listed below.
\fs24 \

\fs32 1. Degree distribution
\fs24 \

\fs32 2. Diameter
\fs24 \

\fs32 3. Geodesic path length
\fs24 \

\fs32 4. Clustering coefficient & average clustering coefficient
\fs24 \

\fs32 5. Strongly connected components
\fs24 \

\fs32 6. SCC their properties
\fs24 \

\fs32 7. Sparseness
\fs24 \

\fs32 8. 1-connectedness to k-connectedness; what is k for your graph?
\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 \ul \ulc2 Datasets\'a0
\fs24 \ulnone \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 Facebook Ego network
\fs24 \
\pard\pardeftab720\sl380\sa160\partightenfactor0

\fs32 \cf2 High Energy Physics - Theory collaboration network
\f0\b\fs48 \
\pard\pardeftab720\li960\sl380\sa160\partightenfactor0

\f1\b0\fs32 \cf2 Gnutella peer-to-peer network, August 6 2002
\f0\b\fs48 \
\pard\pardeftab720\sl380\sa160\partightenfactor0

\f1\b0\fs32 \cf2 Social circles: Twitter
\f0\b\fs48 \

\f1\b0\fs32 Wikipedia Talk network
\f0\b\fs48 \
\pard\pardeftab720\sl280\partightenfactor0

\f1\b0\fs24 \cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 \ul \ulc2 Code
\fs24 \ulnone \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 draw_network.py : To draw the network
\fs24 \

\fs32 degree_dist.py : To plot the degree distribution of network
\fs24 \

\fs32 network_properties.py : To get the various properties
\fs24 \

\fs32 giant_component.py : To plot largest connected component
\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\
\
\pard\pardeftab720\sl380\partightenfactor0

\f0\b\fs32 \cf2 Part2
\f1\b0\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 For the sample network data considered for the earlier experiments, applied the Erdos Renyi Model, Watts-Strogatz Model and Barabasi Albert Model and verified the inherent properties exhibited by the graph data.
\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 \ul \ulc2 Code
\fs24 \ulnone \
\pard\pardeftab720\sl380\partightenfactor0

\fs32 \cf2 random_graph.py
\fs24 \

\fs32 watts.py
\fs24 \

\fs32 barabasi.py
\fs24 \
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
\pard\pardeftab720\sl380\partightenfactor0

\f0\b\fs32 \cf2 Language : python3
\f1\b0\fs24 \

\f0\b\fs32 Libraries : matplotlib,networkx
\f1\b0\fs24 \
}